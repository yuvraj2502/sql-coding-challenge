/*
use banking_system;

insert into customer(first_name,last_name,dob) values 
('harry','potter','2002-03-21'),
('ronald','weasley','2001-02-10'),
('hermione','granger','2002-11-15');


insert into account(account_type,balance,customer_id) values 
('savings',50000,1) ,
('current',120000,2) ,
('zero_balance',100000,3),
('current',150000,1) ,
('savings',30000,3);


insert into transaction(transaction_type,amount,transaction_date,account_id) 
values 
('deposit', 10000, '2024-02-01',1),
('withdrawal', 5000, '2024-02-02',1),
('deposit', 20000, '2024-02-02',2),
('withdrawal', 8000, '2024-02-02',3),
('transfer', 20000, '2024-02-01',4),
('transfer', 7000, '2024-02-05',5);

*/



use banking_system;


-- Task 2

-- 1. Write a SQL query to retrieve the name, account type and email of all customers.
select c.* , a.account_type from customer c JOIN account a ON a.customer_id = c.id;
/*
1	harry	potter	2002-03-21	savings
2	ronald	weasley	2001-02-10	current
3	hermione	granger	2002-11-15	zero_balance
1	harry	potter	2002-03-21	current
3	hermione	granger	2002-11-15	savings
*/
-- ------------------------------------------------------------------------------------------------------------------------------------------------

-- 2. Write a SQL query to list all transaction corresponding customer.
select c.first_name, t.*
from transaction t 
	JOIN account a ON a.id = t.account_id
    JOIN customer c ON c.id = a.customer_id;
    
/*
harry	1	deposit	2024-02-01	1	10000
harry	2	withdrawal	2024-02-02	1	5000
harry	5	transfer	2024-02-01	4	20000
ronald	3	deposit	2024-02-02	2	20000
hermione	4	withdrawal	2024-02-02	3	8000
hermione	6	transfer	2024-02-05	5	7000
*/

-- ------------------------------------------------------------------------------------------------------------------------------------------------

-- 3. Write a SQL query to increase the balance of a specific account by a certain amount.
update account
set balance = balance + 500 
where id = 4;
-- ------------------------------------------------------------------------------------------------------------------------------------------------

-- 4. Write a SQL query to Combine first and last names of customers as a full_name.
select concat(first_name," ", last_name) as full_name from customer;

/*
harry potter
ronald weasley
hermione granger
*/
-- ------------------------------------------------------------------------------------------------------------------------------------------------

-- 5. Write a SQL query to remove accounts with a balance of zero where the account 
-- type is savings.
delete from account where balance = 0 and account_type = 'saving';

-- ------------------------------------------------------------------------------------------------------------------------------------------------

-- 7. Write a SQL query to Get the account balance for a specific account.
select * from account where id = '1';

/*
1	savings	50000	1
*/

-- ------------------------------------------------------------------------------------------------------------------------------------------------

-- 8. Write a SQL query to List all current accounts with a balance greater than $1,000.
select * 
from account 
where balance > 1000;

/*
1	savings	50000	1
2	current	120000	2
3	zero_balance	100000	3
4	current	151500	1
5	savings	30000	3
			
*/

-- ------------------------------------------------------------------------------------------------------------------------------------------------

-- 9. Write a SQL query to Retrieve all transactions for a specific account.
select * 
from transaction 
where account_id = 1;

/*
1	deposit	2024-02-01	1	10000
2	withdrawal	2024-02-02	1	5000
				
*/

-- ------------------------------------------------------------------------------------------------------------------------------------------------



-- ===================================================================================================

-- Tasks 3: Aggregate functions, Having, Order By, GroupBy and Joins:

-- 1. Write a SQL query to Find the average account balance for all customers. 
select c.first_name , avg(balance)
from customer c
	JOIN account a ON c.id = a.customer_id
    group by c.id;
    
/*
harry	100750.0000
ronald	120000.0000
hermione	65000.0000
*/

-- ------------------------------------------------------------------------------------------------------------------------------------------------
-- 2. Write a SQL query to Retrieve the top 10 highest account balances.
select *
from account a
order by a.balance desc
limit 10;

/*
4	current	151500	1
2	current	120000	2
3	zero_balance	100000	3
1	savings	50000	1
5	savings	30000	3
*/

-- ------------------------------------------------------------------------------------------------------------------------------------------------

-- 3. Write a SQL query to Calculate Total Deposits for All Customers in specific date.
select sum(t.amount)  as total_deposit
from transaction t
where t.transaction_date = '2024-02-02' and t.transaction_type = 'deposit';

/*
20000
*/
-- ------------------------------------------------------------------------------------------------------------------------------------------------

-- 5. Write a SQL query to Retrieve transaction details along with the account type.
select t.* ,a.account_type
from transaction t
	JOIN account a ON a.id = t.account_id;
    
/*
1	deposit	2024-02-01	1	10000	savings
2	withdrawal	2024-02-02	1	5000	savings
3	deposit	2024-02-02	2	20000	current
4	withdrawal	2024-02-02	3	8000	zero_balance
5	transfer	2024-02-01	4	20000	current
6	transfer	2024-02-05	5	7000	savings
*/
-- ------------------------------------------------------------------------------------------------------------------------------------------------


-- 6. Write a SQL query to Get a list of customers along with their account details.
select * from customer c
JOIN account a ON a.customer_id = c.id;

/*
1	harry	potter	2002-03-21	1	savings	50000	1
2	ronald	weasley	2001-02-10	2	current	120000	2
3	hermione	granger	2002-11-15	3	zero_balance	100000	3
1	harry	potter	2002-03-21	4	current	151500	1
3	hermione	granger	2002-11-15	5	savings	30000	3
*/
-- ------------------------------------------------------------------------------------------------------------------------------------------------

-- 7. Write a SQL query to Retrieve transaction details along with customer information for a specific account.
select *
from transaction t 
	JOIN account a ON t.account_id = a.id
	JOIN customer c ON a.customer_id = c.id
    where account_id = 2;

/*
3	deposit	2024-02-02	2	20000	2	current	120000	2	2	ronald	weasley	2001-02-10
*/
-- ------------------------------------------------------------------------------------------------------------------------------------------------

-- 8. Write a SQL query to Identify customers who have more than one account.
select * 
from customer c
	JOIN account a ON a.customer_id = c.id
    group by c.id
    having count(a.id)>1;
	
/*
1	harry	potter	2002-03-21	1	savings	50000	1
3	hermione	granger	2002-11-15	3	zero_balance	100000	3
*/
-- ------------------------------------------------------------------------------------------------------------------------------------------------

-- 11. Calculate the total balance for each account type.
select a.account_type , sum(a.balance) as Total_Balance
from account a
group by a.account_type;

/*
current	271500
savings	80000
zero_balance	100000
*/
-- ------------------------------------------------------------------------------------------------------------------------------------------------

-- 12. Identify accounts with the highest number of transactions order by descending order.
select a.* , count(a.id) as no_of_transaction
from transaction t 
	JOIN account a ON a.id = t.account_id
    group by a.id
    order by no_of_transaction desc;

/*
1	savings	50000	1	2
2	current	120000	2	1
3	zero_balance	100000	3	1
4	current	151500	1	1
5	savings	30000	3	1
*/
-- ------------------------------------------------------------------------------------------------------------------------------------------------


-- ------------------------------------------------------------------------------------------------------------------------------------------------


-- Task 4: : Subquery and its type:
-- 1. Retrieve the customer(s) with the highest account balance.
select c.*, a.balance
from customer c 
	JOIN account a on c.id = a.customer_id
	where a.balance in (select max(balance) from account);
/*
1	harry	potter	2002-03-21	151500
*/
-- ------------------------------------------------------------------------------------------------------------------------------------------------

-- 2. Calculate the average account balance for customers who have more than one account.
select * 
from customer c
	JOIN account a ON a.customer_id = c.id
    group by a.id;
    

/*
1	harry	potter	2002-03-21	1	savings	50000	1
2	ronald	weasley	2001-02-10	2	current	120000	2
3	hermione	granger	2002-11-15	3	zero_balance	100000	3
1	harry	potter	2002-03-21	4	current	151500	1
3	hermione	granger	2002-11-15	5	savings	30000	3
*/
-- ------------------------------------------------------------------------------------------------------------------------------------------------

-- 3. Retrieve accounts with transactions whose amounts exceed the average transaction amount.
select a.account_type , a.id,t.transaction_type , t.amount
from account a 
	JOIN transaction t ON a.id = t.account_id
    where t.amount > (select avg(amount) from transaction);

/*
current	2	deposit	20000
current	4	transfer	20000
*/
-- ------------------------------------------------------------------------------------------------------------------------------------------------

-- 4. Identify customers who have no recorded transactions.
-- projection customer 
-- criteria transaction 

select *
from customer c 
	JOIN account a ON c.id = a.customer_id
    where a.id not in (select a.id from account a 
								JOIN transaction t ON a.id = t.account_id
                                group by a.id
                                );
/*
3	hermione	granger	2002-11-15	5	savings	30000	3
*/
-- ------------------------------------------------------------------------------------------------------------------------------------------------

-- 5. Calculate the total balance of accounts with no recorded transactions projection 
select *
from account
where id NOT IN(select a.id
				from account a JOIN transaction t ON a.id=t.account_id);
/*
5	savings	30000	3
*/
-- ------------------------------------------------------------------------------------------------------------------------------------------------

-- 6. Retrieve transactions for accounts with the lowest balance.
select t.*,a.balance
from account a 
	JOIN transaction t ON a.id=t.account_id
	order by a.balance DESC
	limit 1;
/*
5	transfer	2024-02-01	4	20000	152000
*/
-- ------------------------------------------------------------------------------------------------------------------------------------------------

-- 7. Identify customers who have accounts of multiple types.
select c.*
from customer c 
	JOIN account a ON c.id=a.customer_id
	group by c.id
	having count(a.id)>1;
/*
1	harry	potter	2002-03-21
3	hermione	granger	2002-11-15
*/
-- ------------------------------------------------------------------------------------------------------------------------------------------------

-- 8. Calculate the percentage of each account type out of the total number of accounts.
select *, count(account_type)/(select count(id) from account)*100 as percentage
from account
group by account_type;
/*
2	current	120000	2	40.0000
1	savings	50000	1	40.0000
3	zero_balance	100000	3	20.0000
*/
-- ------------------------------------------------------------------------------------------------------------------------------------------------

-- 9. Retrieve all transactions for a customer with a given customer_id.
select *
from customer c
	JOIN account a ON c.id=a.customer_id
	JOIN transaction t ON a.id=t.account_id
	where c.id=1;
/*
1	harry	potter	2002-03-21	1	savings	50000	1	1	deposit	2024-02-01	1	10000
1	harry	potter	2002-03-21	1	savings	50000	1	2	withdrawal	2024-02-02	1	5000
1	harry	potter	2002-03-21	4	current	152000	1	5	transfer	2024-02-01	4	20000
*/
-- ------------------------------------------------------------------------------------------------------------------------------------------------

-- 10. Calculate the total balance for each account type, including a subquery within the SELECT  clause.
select account_type, sum(balance) as total_balance
from account
	group by account_type;
/*
current	272000
savings	80000
zero_balance	100000
*/
-- ------------------------------------------------------------------------------------------------------------------------------------------------


